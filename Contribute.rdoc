= Contributing

Please be familiar with Ruby and JavaScript conventions, study existing code styling, and review the feature requests and project goals before making contributions.

====Install RVM and Homebrew
Prep your system to pull other dependencies
  curl -L https://get.rvm.io | bash
  cd /usr/local
  mkdir homebrew && curl -L https://github.com/mxcl/homebrew/tarball/master | tar xz --strip 1 -C homebrew

====Install NodeJS and PhantomJS
  brew update && brew install node phantomjs

====Install Yoeman (Bower & Grunt)
  npm install -g grunt-cli bower yo generator-webapp generator-angular

====Install Node Dependencies
Deps are defined in package.json
  npm install

====Install Bundler
  gem install bundler

====Install Ruby Dependencies
Deps are defined in Gemfile
  bundle install

====Install Postgresql
Install simple instance from: http://postgresapp.com/

If you obtain error:
        could not connect to server: Permission denied
        Is the server running locally and accepting
        connections on Unix domain socket "/var/pgsql_socket/.s.PGSQL.5432"?
To resolve:
        export PGHOST=localhost
   (or modify PATH exports):
        PATH=/Applications/Postgres.app/Contents/MacOS/bin:$PATH

If you obtain error:
        PG::Error: ERROR:  invalid value for parameter "TimeZone": "UTC"
        : SET time zone 'UTC'
To resolve:
        SET time zone 'UTC'

Create the POSTGIS extension:
   ?> psql
   CREATE EXTENSION postgis;

If you obtain error:
   CREATE EXTENSION postgis;
       ERROR:  could not load library "/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/local/lib/libtiff.5.dylib
       Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/../lib/libgdal.1.dylib
       Reason: image not found
To resolve:
       brew install libtiff

create role postgres superuser createdb createrole inherit login;

====Run Jasmine and PhantomJS Specs
Specs are located in <app_root>/spec/*
  grunt test`

====Run RSpec Specs
Specs are located in <app_root>/spec/*
  rspec spec -f d`


